import subprocess,time

def brute_force_dictionnaire(username, path_to_binary, path_to_dictionary):
    try:
        # Ouvrir le fichier contenant les mots de passe potentiels
        with open(path_to_dictionary, 'r') as file:
            for password in file:
                password = password.strip()  # Nettoyer les espaces et sauts de ligne
                
                # Préparer les entrées pour le programme
                input_data = f"{username}\n{password}\n"
                input_bytes = input_data.encode('utf-8')  # S'assurer que l'encodage est fait ici
                
                # Exécuter le programme avec les entrées
                process = subprocess.run([path_to_binary], input=input_bytes, capture_output=True, text=False) #Le input_data est parsé dans cette fonction, afin d'envoyer au bon moment le username et password
                
                # Décoder la sortie pour vérifier si le mot de passe est correct
                output = process.stdout.decode('utf-8')
                if "Accès autorisé".lower() in output.lower():
                    print(f"Mot de passe trouvé: {password}")
                    return password
                time.sleep(0.2)
    except FileNotFoundError:
        print("Le fichier de dictionnaire n'a pas été trouvé.")
    except Exception as e:
        print(f"Une erreur est survenue: {e}")

    print("Aucun mot de passe trouvé.")
    return None

# Utilisation de la fonction
path_to_binary = './local_exec'  # Chemin vers le binaire
username = 'admin'
path_to_dictionary = 'dict.txt'  # Chemin vers le fichier contenant les mots de passe potentiels
found_password = brute_force_dictionnaire(username, path_to_binary, path_to_dictionary)